# évalue la récurrence f_{n} = f_{n - 1} + f_{n - 2} + (-1)^n, f_0 = 0 et f_1 = 1

.data
    prompt: .asciiz "Entrez une valeur pour n: "
    buffer: .word   1

.text

main:
    la $a0, prompt
    li $v0, 4
    syscall

    la $a0, buffer # read integer
    li $a1, 4
    li $v0, 5
    syscall

    move $a0, $v0

    f: # résout un niveau de récurrence

        # $a0 contient l'argument n

        # on préserve le registres $s0
        addi $sp, -4
        sw   $s0, 0($sp)
    
    n_0:
        bgt  $a0, $zero, n_1 # n = 0
        addi $v0, $zero, 0
        j    done

    n_1:
        addi $t0, $zero, 1
        bgt  $a0, $t0, n_n

        addi $v0, $zero, 1
        jr $ra

    n_n:

        # on stocke $s0 dans la pile
        addi $sp, $sp, -8
        sw   $s0, 0($sp)
        sw   $s1, -4($sp)

        move $s0, $a0 # on garde n dans $s0

        # résout n - 2
        addi $a0, $s0, -2
        jal  f
        add  $s1, $s1, $v0

        # résout n - 2
        addi $a0, $s0, -1
        jal  f
        add  $s1, $s1, $v0

        # calcul de -1^n
        #
        addi $t0, $zero, 2
        div $a0, $t0

        mfhi $t0
        beq  $t0, $zero, even
    
        addi $v0, -1

        j    return

    even:

        addi $v0, 1 # sinon, n est pair

    return:
        # restitution des registres
        lw   $s0, 0($sp)
        lw   $s1, -4($sp)
        addi $sp, $sp, 8

        jr $ra

done:
    move $a0, $s0
    li   $v0, 1
    syscall

    li   $v0, 10
    syscall
